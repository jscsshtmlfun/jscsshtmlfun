{"version":3,"sources":["common/user.svg","common/Loading.js","common/SignIn.js","common/Home.js","App.js","config/firebase.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loading","react_default","a","createElement","className","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","loading","refEmail","React","createRef","handleEmailChange","bind","assertThisInitialized","handlePasswordChange","handleSignIn","handleSignUp","handleResetPassword","handleSubmit","clearForm","e","setState","current","focus","preventDefault","target","value","error","alert","message","type","_this2","action","auth","sendPasswordResetEmail","then","createUserWithEmailAndPassword","signInWithEmailAndPassword","catch","catchError","firebaseAction","onSubmit","href","onClick","onChange","ref","placeholder","autoFocus","required","common_Loading","Component","User","user","name","displayName","userPhotoURL","userPhotoDefault","handleSignOut","handleNameChange","handleUpdateName","handleUploadPhoto","handleInputPhoto","handleChoosePhoto","fileInputPhoto","photo","file","path","uid","storage","child","put","snapshot","console","log","getDownloadURL","url","click","files","_this3","currentUser","updateProfile","signingOut","signOut","accept","src","alt","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","common_Home","src_common_SignIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6dbf8302.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.877a015e.svg\";","import React from 'react';\nimport './Loading.css';\n\nfunction Loading() {\n  return (\n    <div className=\"Loading\"></div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport './SignIn.css';\nimport Loading from './Loading';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'dummy@us.er',\n      password: 'fR58fT}F@)Mc*E\"S',\n      loading: false,\n    };\n    this.refEmail = React.createRef();\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearForm = this.clearForm.bind(this);\n  }\n\n  clearForm(e) {\n    this.setState({email: '', password: ''});\n    this.refEmail.current.focus();\n    e.preventDefault();\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleSignIn(e) {\n    const email = this.state.email;\n    const password = this.state.password;\n    if (email && password) this.handleSubmit(e);\n  }\n\n  catchError(error) {\n    alert(error.message);\n    this.setState({loading: false});\n  }\n\n  firebaseAction(e, type) {\n    e.preventDefault();\n    if (this.state.loading) return;\n    const auth = this.props.auth;\n    const email = this.state.email;\n    const password = this.state.password;\n    let action;\n    if (type === 'password-reset') {\n      action = auth.sendPasswordResetEmail(email).then(() => {\n        alert('Password reset email sent!');\n        this.setState({loading: false});\n      });\n    } else if (type === 'sign-up') {\n      action = auth.createUserWithEmailAndPassword(email, password);\n    } else if (type === 'sign-in') {\n      action = auth.signInWithEmailAndPassword(email, password);\n    }\n    action.catch(error => {this.catchError(error)});\n    this.setState({loading: true});\n  }\n\n  handleResetPassword(e) {\n    this.firebaseAction(e, 'password-reset');\n  }\n\n  handleSignUp(e) {\n    this.firebaseAction(e, 'sign-up');\n  }\n\n  handleSubmit(e) {\n    this.firebaseAction(e, 'sign-in');\n  }\n\n  render() {\n    return (\n      <div className=\"SignIn text-center\">\n        <form className=\"form-signin\" onSubmit={this.handleSubmit}>\n          <h1 className=\"h3 mb-3 font-weight-normal\">\n            Welcome\n            &nbsp;\n            <a\n              href=\"#/\"\n              onClick={this.clearForm}\n              className=\"btn btn-outline-secondary\"\n            >\n              New\n            </a>\n          </h1>\n          <hr/>\n          <input\n            className=\"form-control\"\n            value={this.state.email}\n            onChange={this.handleEmailChange}\n            ref={this.refEmail}\n            type=\"email\"\n            placeholder=\"email\"\n            autoFocus\n            required\n          />\n          <input\n            className=\"form-control\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            type=\"password\"\n            placeholder=\"password\"\n            required\n          />\n          <button className=\"btn btn-primary btn-block\" onClick={this.handleSignIn}>\n            Sign In\n          </button>\n          <br/>\n          <button className=\"btn btn-secondary\" onClick={this.handleSignUp}>\n            Sign Up\n          </button>\n          &nbsp;&nbsp;&nbsp;\n          <button className=\"btn btn-light\" onClick={this.handleResetPassword}>\n            Reset Password\n          </button>\n          {this.state.loading && <Loading/>}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport './Home.css';\nimport userPhotoDefault from './user.svg';\nimport Loading from './Loading';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    const user = props.user;\n    let name = user.displayName;\n    if (!user.displayName) name = user.email;\n    this.state = {\n      name: name,\n      loading: false,\n      userPhotoURL: userPhotoDefault,\n    };\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleUpdateName = this.handleUpdateName.bind(this);\n    this.handleUploadPhoto = this.handleUploadPhoto.bind(this);\n    this.handleInputPhoto = this.handleInputPhoto.bind(this);\n    this.handleChoosePhoto = this.handleChoosePhoto.bind(this);\n    this.fileInputPhoto = React.createRef();\n    this.photo();\n  }\n\n  photo(file) {\n    const path = 'user_profile_photos/' + this.props.user.uid;\n    const ref = this.props.storage.ref().child(path);\n    if (file) {\n      ref.put(file).then(snapshot => {\n        console.log('uploaded!', snapshot);\n        this.photo();\n      });\n      return;\n    }\n    ref.getDownloadURL().then(url => {\n      this.setState({userPhotoURL: url});\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  handleChoosePhoto(e) {\n    console.log(this.fileInputPhoto);\n    this.fileInputPhoto.current.click();\n  }\n\n  handleInputPhoto(e) {\n  }\n\n  handleUploadPhoto(e) {\n    const file = this.fileInputPhoto.current.files[0];\n    this.photo(file);\n  }\n\n  handleUpdateName(e) {\n    if (!this.state.loading) {\n      const user = this.props.auth.currentUser;\n      user.updateProfile({\n        displayName: this.state.name\n      }).then(() => {\n        this.setState({loading: false});\n      }).catch(error => {console.log(error)});\n    }\n    this.setState({loading: true});\n  }\n\n  handleNameChange(e) {\n    this.setState({name: e.target.value});\n  }\n\n  handleSignOut(e) {\n    if (!this.state.signingOut)\n    this.props.auth.signOut();\n    this.setState({\n      loading: true,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"text-right\">\n          <button onClick={this.handleSignOut}>Sign Out</button>\n        </div>\n        <hr/>\n        <div className=\"text-center\">\n          <input type=\"file\" accept=\"image/*\" ref={this.fileInputPhoto}/>\n          <button onClick={this.handleUploadPhoto}>Upload</button>\n          <br/>\n          <img\n            onClick={this.handleChoosePhoto}\n            src={this.state.userPhotoURL}\n            className=\"Home-user-photo\"\n            alt=\"user\"\n          />\n          <br/>\n          <br/>\n          <span>\n            <input\n              value={this.state.name}\n              onChange={this.handleNameChange}\n              className=\"form-control form-control-lg text-center\"\n            />\n          </span>\n          <br/>\n          <button onClick={this.handleUpdateName}>Change</button>\n        </div>\n        {this.state.loading && <Loading/>}\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport config from './config/firebase';\nimport Loading from './common/Loading';\nimport SignIn from './common/SignIn';\nimport Home from './common/Home';\n\nconst firebaseApp = firebase.initializeApp(config);\nconst auth = firebaseApp.auth();\nconst storage = firebaseApp.storage();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {user: false};\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      this.setState({user: user});\n    });\n  }\n\n  render() {\n    const user = this.state.user;\n    if (user === false) return <Loading/>;\n    if (user) return <Home auth={auth} user={user} storage={storage}/>\n    return <SignIn auth={auth}/>;\n  }\n}\n\nexport default App;\n","export default {\n  apiKey: \"AIzaSyA7YGM0a9FxNlJffuIvlJ552ILZ1WehHTo\",\n  authDomain: \"jscsshtmlfun.firebaseapp.com\",\n  databaseURL: \"https://jscsshtmlfun.firebaseio.com\",\n  projectId: \"jscsshtmlfun\",\n  storageBucket: \"jscsshtmlfun.appspot.com\",\n  messagingSenderId: \"150568044428\",\n  appId: \"1:150568044428:web:3ede6716aac3dd0b\"\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}